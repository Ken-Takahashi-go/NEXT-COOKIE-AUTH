{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\naxios.defaults.withCredentials = true;\nexport var getServerSideToken = function getServerSideToken(req) {\n  var _ref = {},\n      _ref$signedCookies = _ref.signedCookies,\n      signedCookies = _ref$signedCookies === void 0 ? {} : _ref$signedCookies;\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return {\n    user: signedCookies.token\n  };\n};\nexport var getClientsSideToken = function getClientsSideToken() {\n  if (true) {\n    var user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user: user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nvar WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\nexport var getUserScript = function getUserScript(user) {\n  return \"\".concat(WINDOW_USER_SCRIPT_VARIABLE, \" = \").concat(JSON.stringify(user), \";\");\n};\nexport var authInitialProps = function authInitialProps(isProtectedRoute) {\n  return function (_ref2) {\n    var req = _ref2.req;\n    var auth = req ? getServerSideToken(req) : getClientsSideToken();\n    var user = auth.user;\n    var isAnonymous = !user || user.type !== \"authenticated\";\n\n    if (isProtectedRoute) {\n      return reirectUser;\n    }\n\n    return {\n      auth: auth\n    };\n  };\n};\nexport var loginUser = function loginUser(email, password) {\n  var _await$axios$post, data;\n\n  return _regeneratorRuntime.async(function loginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"/api/login\", {\n            email: email,\n            password: password\n          }));\n\n        case 2:\n          _await$axios$post = _context.sent;\n          data = _await$axios$post.data;\n\n          if (true) {\n            window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n          }\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var logoutUser = function logoutUser() {\n  return _regeneratorRuntime.async(function logoutUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (true) {\n            window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n          }\n\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(\"/api/logout\"));\n\n        case 3:\n          Router.push(\"/login\");\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getUserProfile = function getUserProfile() {\n  var _await$axios$get, data;\n\n  return _regeneratorRuntime.async(function getUserProfile$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"/api/profile\"));\n\n        case 2:\n          _await$axios$get = _context3.sent;\n          data = _await$axios$get.data;\n          return _context3.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/takah/OneDrive/デスクトップ/next-cookie-auth/lib/auth.js"],"names":["axios","Router","defaults","withCredentials","getServerSideToken","req","signedCookies","token","user","getClientsSideToken","window","WINDOW_USER_SCRIPT_VARIABLE","getUserScript","JSON","stringify","authInitialProps","isProtectedRoute","auth","isAnonymous","type","reirectUser","loginUser","email","password","post","data","logoutUser","push","getUserProfile","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport Router from \"next/router\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const getServerSideToken = (req) => {\r\n  const { signedCookies = {} } = {};\r\n  if (!signedCookies) {\r\n    return {};\r\n  } else if (!signedCookies.token) {\r\n    return {};\r\n  }\r\n  return { user: signedCookies.token };\r\n};\r\n\r\nexport const getClientsSideToken = () => {\r\n  if (typeof window !== \"undefined\") {\r\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\r\n    return { user };\r\n  }\r\n  return { user: {} };\r\n};\r\n\r\nconst WINDOW_USER_SCRIPT_VARIABLE = \"__USER__\";\r\n\r\nexport const getUserScript = (user) => {\r\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\r\n};\r\n\r\nexport const authInitialProps = (isProtectedRoute) => ({ req }) => {\r\n  const auth = req ? getServerSideToken(req) : getClientsSideToken();\r\n  const user = auth.user;\r\n  const isAnonymous = !user || user.type !== \"authenticated\";\r\n\r\n  if (isProtectedRoute) {\r\n    return reirectUser;\r\n  }\r\n\r\n  return { auth };\r\n};\r\n\r\nexport const loginUser = async (email, password) => {\r\n  const { data } = await axios.post(\"/api/login\", { email, password });\r\n  if (typeof window !== \"undefined\") {\r\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  if (typeof window !== \"undefined\") {\r\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\r\n  }\r\n  await axios.post(\"/api/logout\");\r\n  Router.push(\"/login\");\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n  const { data } = await axios.get(\"/api/profile\");\r\n  return data;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}